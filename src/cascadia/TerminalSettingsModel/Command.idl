// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import "ActionArgs.idl";
import "Profile.idl";
import "ColorScheme.idl";
import "TerminalWarnings.idl";

namespace Microsoft.Terminal.Settings.Model
{
    enum ShortcutAction
    {
        Invalid = 0, // treat Invalid as unbound actions
        CopyText,
        PasteText,
        OpenNewTabDropdown,
        DuplicateTab,
        NewTab,
        CloseWindow,
        CloseTab,
        ClosePane,
        NextTab,
        PrevTab,
        SplitVertical,
        SplitHorizontal,
        SendInput,
        SplitPane,
        TogglePaneZoom,
        SwitchToTab,
        AdjustFontSize,
        ResetFontSize,
        ScrollUp,
        ScrollDown,
        ScrollUpPage,
        ScrollDownPage,
        ScrollToTop,
        ScrollToBottom,
        ResizePane,
        MoveFocus,
        Find,
        ToggleShaderEffects,
        ToggleFocusMode,
        ToggleFullscreen,
        ToggleAlwaysOnTop,
        OpenSettings,
        SetColorScheme,
        SetTabColor,
        OpenTabColorPicker,
        RenameTab,
        OpenTabRenamer,
        ExecuteCommandline,
        ToggleCommandPalette,
        CloseOtherTabs,
        CloseTabsAfter,
        TabSearch,
        MoveTab,
        BreakIntoDebugger,
        TogglePaneReadOnly,
        FindMatch,
        NewWindow
    };

    [default_interface] runtimeclass ActionAndArgs {
        ActionAndArgs();
        ActionAndArgs(ShortcutAction action, IActionArgs args);

        IActionArgs Args;
        ShortcutAction Action;
    };

    [default_interface] runtimeclass Command : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        Command();

        String Name;
        ActionAndArgs Action;
        Microsoft.Terminal.Control.KeyChord Keys;

        String IconPath;

        Boolean HasNestedCommands { get; };
        Windows.Foundation.Collections.IMapView<String, Command> NestedCommands { get; };

        static void ExpandCommands(Windows.Foundation.Collections.IMap<String, Command> commands,
                                   Windows.Foundation.Collections.IVectorView<Profile> profiles,
                                   Windows.Foundation.Collections.IVectorView<ColorScheme> schemes,
                                   Windows.Foundation.Collections.IVector<SettingsLoadWarnings> warnings);
    }
}
